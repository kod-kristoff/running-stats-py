name: Build & Publish

on:
  push:
    branches:
      - master
    tags:
      - v.*

env:
  CC_TEST_REPORTER_URL: https://codeclimate.com/downloads/test-reporter/test-reporter-0.7.0-linux-amd64

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install-dev

      - name: Lint with pylint
        run: make lint-no-fail

      - name: Test with pytest
        run: make test-w-coverage

      - name: Set ENV for codeclimate (pull_request)
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/$GITHUB_HEAD_REF:refs/remotes/origin/$GITHUB_HEAD_REF
          echo "GIT_BRANCH=$GITHUB_HEAD_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$(git rev-parse origin/$GITHUB_HEAD_REF)" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'

      - name: Set ENV for codeclimate (push)
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
        if: github.event_name == 'push'

      - name: Download test coverage reporter
        run: curl -L $CC_TEST_REPORTER_URL > cc-test-reporter

      - name: Give test coverage reporter executable permissions
        run: chmod +x cc-test-reporter

      - name: Save coverage
        run: ./cc-test-reporter format-coverage coverage.xml -t coverage.py --output coverage/codeclimate.${{ matrix.python-version }}.json

      - uses: actions/upload-artifact@v1
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage/codeclimate.${{ matrix.python-version }}.json
  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Build distribution
        run: |
          pip install --upgrade setuptools twine wheel pbr
          python setup.py sdist bdist_wheel
          echo "github.ref = ${{ github.ref }}"
      - name: Check distributions
        run: twine check dist/*
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'kod-kristoff/running-stats-py' && !startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: github.repository == 'kod-kristoff/running-stats-py' && startsWith(github.ref, 'refs/tags/')
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

  upload_coverage:
    runs-on: ubuntu-latest

    env:
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    needs: test

    steps:
      - name: Download test coverage reporter
        run: curl -L $CC_TEST_REPORTER_URL > cc-test-reporter

      - name: Give test coverage reporter executable permissions
        run: chmod +x cc-test-reporter

      - uses: actions/download-artifact@v4.1.7
        with:
          name: coverage-3.6
          path: coverage

      - uses: actions/download-artifact@v4.1.7
        with:
          name: coverage-3.7
          path: coverage

      - uses: actions/download-artifact@v4.1.7
        with:
          name: coverage-3.8
          path: coverage

      - name: Aggregate & upload results to Code Climate
        run: |
          ./cc-test-reporter sum-coverage coverage/codeclimate.*.json
          ./cc-test-reporter upload-coverage
